{"remainingRequest":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\views\\system\\function\\index.vue?vue&type=style&index=0&id=73d5c091&scoped=true&lang=css&","dependencies":[{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\views\\system\\function\\index.vue","mtime":1698675814000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678020088000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678020084000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1678020088000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJsZSB7CiAgcGFkZGluZzogMzBweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkQA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/function","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"inner_container\">\n        <div class=\"table\">\n          <el-form>\n            <el-form-item>\n              <el-button v-has-permi=\"['system:function:save']\"\n                  style=\"font-size: 16px;\"  type=\"success\" @click=\"showDialog(undefined)\"> 新增\n              </el-button>\n            </el-form-item>\n\n          </el-form>\n          <el-table v-loading=\"loading\"\n                    :data=\"functionList\"\n                    :tree-props=\"{children: 'children'}\"\n                    row-key=\"id\">\n            <el-table-column label=\"菜单名称\" prop=\"name\" width=\"210\"></el-table-column>\n            <el-table-column label=\"图标\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <i class=\"iconfont\" :class=\"scope.row.icon\"></i>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"排序序号\" prop=\"orderNum\" width=\"80\"></el-table-column>\n            <el-table-column label=\"权限标识\" prop=\"permission\"></el-table-column>\n            <el-table-column label=\"组件路径\" prop=\"component\"></el-table-column>\n            <el-table-column label=\"路由地址\" prop=\"path\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"240\" fixed=\"right\">\n              <template slot-scope=\"scope\">\n                <el-button v-has-permi=\"['system:function:query']\"\n                    style=\"font-size: 14px;\"  type=\"primary\" @click=\"showDialog(scope.row.id)\"> 详情\n                </el-button>\n                <template>\n                  <el-popconfirm title=\"确定删除吗？\" @confirm=\"del(scope.row.id)\">\n                    <el-button style=\"margin-left: 8px;font-size: 12px;\" v-has-permi=\"['system:function:delete']\"\n                               slot=\"reference\"  type=\"danger\"> 删除\n                    </el-button>\n                  </el-popconfirm>\n                </template>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <div class=\"dialog\">\n          <el-dialog\n              :title=\"dialogTitle\"\n              :visible.sync=\"dialogVisible\"\n              width=\"40%\"\n              @closed=\"handleClose\"\n          >\n            <el-form ref=\"saveOrUpdateForm\" :rules=\"rules\" :model=\"form\" label-width=\"80px\">\n              <el-form-item label=\"上级菜单\">\n                <tree-select\n                    v-model=\"form.parentId\"\n                    :options=\"functionList\"\n                    :normalizer=\"normalizer\"\n                    :show-count=\"true\"\n                    placeholder=\"选择上级菜单\"></tree-select>\n              </el-form-item>\n              <el-form-item label=\"菜单类型\">\n                <el-radio-group v-model=\"form.menuType\">\n                  <el-radio label=\"M\">目录</el-radio>\n                  <el-radio label=\"C\">菜单</el-radio>\n                  <el-radio label=\"F\">按钮</el-radio>\n                </el-radio-group>\n              </el-form-item>\n              <el-row :gutter=\"20\">\n                <el-col :span=\"12\">\n                  <el-form-item label=\"菜单名称\" prop=\"name\">\n                    <el-input v-model=\"form.name\" placeholder=\"输入菜单名称\"></el-input>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"菜单图标\" v-if=\"form.menuType !== 'F'\">\n                    <el-popover\n                        placement=\"bottom-start\"\n                        width=\"460\"\n                        trigger=\"click\"\n                    >\n                      <icon-select ref=\"iconSelect\" @selected=\"select\"/>\n                      <el-input slot=\"reference\" v-model=\"form.icon\" placeholder=\"点击选择图标\" readonly>\n                        <i\n                            v-if=\"form.icon\"\n                            slot=\"prefix\"\n                            :class=\"form.icon\"\n                            class=\"iconfont\"\n                            style=\"line-height: 40px\"\n                        />\n                        <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\"/>\n                      </el-input>\n                    </el-popover>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"菜单排序\">\n                    <el-input-number v-model=\"form.orderNum\" :min=\"0\" :step=\"1\"></el-input-number>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"组件路径\" prop=\"component\" v-if=\"form.menuType === 'C'\">\n                    <el-input v-model=\"form.component\" placeholder=\"输入组件路径\"></el-input>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"路由地址\" prop=\"path\" v-if=\"form.menuType === 'C'\">\n                    <el-input v-model=\"form.path\" placeholder=\"输入路由地址\"></el-input>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"权限标识\" v-if=\"form.menuType !== 'M'\">\n                    <el-input v-model=\"form.permission\" placeholder=\"输入权限标识\"></el-input>\n                  </el-form-item>\n                </el-col>\n              </el-row>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                            <el-button type=\"danger\" @click=\"handleClose\"> 取 消</el-button>\n                            <el-button type=\"primary\" v-has-permi=\"['system:function:update']\" @click=\"saveOrUpdate\"> 保 存</el-button>\n                          </span>\n          </el-dialog>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {del, listTree, query, saveOrUpdate} from \"@/api/system/SystemFunction\";\nimport TreeSelect from '@riophae/vue-treeselect'\nimport IconSelect from '@/components/IconSelect'\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\n\nexport default {\n  name: \"index\",\n  components: {\n    TreeSelect, IconSelect\n  },\n  data() {\n    return {\n      loading: true,\n      functionList: [],\n      form: {\n        id: undefined,\n        parentId: undefined,\n        name: '',\n        orderNum: undefined,\n        path: '',\n        component: '',\n        menuType: 'M',\n        permission: '',\n        icon: ''\n      },\n      listTree: [],\n      dialogTitle: '',\n      dialogVisible: false,\n      rules: {\n        name: [\n          {required: true, message: '名称不能为空', trigger: 'blur'}\n        ],\n        component: [\n          {required: true, message: '组件不能为空', trigger: 'blur'}\n        ],\n        path: [\n          {required: true, message: '路径不能为空', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  methods: {\n    async listData() {\n      this.loading = true\n      const {data} = await listTree();\n      this.functionList = data\n      this.loading = false\n    },\n    async showDialog(id) {\n      this.dialogTitle = '添加菜单'\n      if (id) {\n        const {data} = await query(id)\n        this.dialogTitle = '修改菜单'\n        if (data) {\n          this.dialogVisible = true\n          this.form = data\n        }\n      } else {\n        this.dialogVisible = true\n      }\n    },\n    del(id) {\n      del(id).then(res => {\n        if (res.statusCode === 200) {\n          this.$message({\n            message: res.msg,\n            type: 'success'\n          });\n          this.listData()\n        }\n      })\n    },\n    saveOrUpdate() {\n      const _this = this\n      this.$refs['saveOrUpdateForm'].validate((valid) => {\n        if (valid) {\n          saveOrUpdate(this.form).then(res => {\n            if (res.statusCode === 200) {\n              this.$message({\n                message: res.msg,\n                type: 'success'\n              });\n              _this.handleClose()\n              _this.listData()\n            }\n          })\n        } else {\n          this.$message({\n            message: '请正确填写参数',\n            type: 'error'\n          });\n          return false;\n        }\n      })\n    },\n    select(name) {\n      this.form.icon = name\n    },\n    handleClose() {\n      this.form = {\n        id: undefined,\n        parentId: undefined,\n        name: '',\n        orderNum: undefined,\n        path: '',\n        component: '',\n        menuType: 'M',\n        permission: '',\n        icon: ''\n      }\n      this.$refs['saveOrUpdateForm'].resetFields()\n      this.dialogVisible = false\n    },\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.children\n      };\n    }\n  },\n  created() {\n    this.listData()\n  }\n}\n</script>\n\n<style scoped>\n.table {\n  padding: 30px;\n}\n</style>\n"]}]}