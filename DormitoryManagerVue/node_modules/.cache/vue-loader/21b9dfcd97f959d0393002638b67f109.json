{"remainingRequest":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\components\\Breadcrumb\\index.vue?vue&type=style&index=0&id=b50ef614&scoped=true&lang=css&","dependencies":[{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\components\\Breadcrumb\\index.vue","mtime":1698659942000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678020088000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678020084000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1678020088000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hcHAtYnJlYWRjcnVtYiB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBsaW5lLWhlaWdodDogNDBweDsKICAgIG1hcmdpbi1sZWZ0OiA4cHg7Cn0KCi5uby1yZWRpcmVjdCB7CiAgICBjb2xvcjogIzk3YThiZTsKICAgIGN1cnNvcjogdGV4dDsKfQoKLmVsLWJyZWFkY3J1bWJfX2l0ZW0gewogICAgaGVpZ2h0OiA0MHB4Owp9CgouYnJlYWRjcnVtYi1lbnRlci1hY3RpdmUsCi5icmVhZGNydW1iLWxlYXZlLWFjdGl2ZSB7CiAgICB0cmFuc2l0aW9uOiBhbGwgMC41czsKfQoKLmJyZWFkY3J1bWItZW50ZXIsCi5icmVhZGNydW1iLWxlYXZlLWFjdGl2ZSB7CiAgICBvcGFjaXR5OiAwOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpOwp9CgouYnJlYWRjcnVtYi1tb3ZlIHsKICAgIHRyYW5zaXRpb246IGFsbCAwLjVzOwp9CgouYnJlYWRjcnVtYi1sZWF2ZS1hY3RpdmUgewogICAgcG9zaXRpb246IGFic29sdXRlOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA4FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\n    <el-breadcrumb class=\"app-breadcrumb\" separator-class=\"el-icon-arrow-right\">\n        <transition-group name=\"breadcrumb\">\n            <el-breadcrumb-item\n                v-for=\"(item, index) in levelList\"\n                :key=\"item.path\"\n                style=\"font-size: 22px;\"\n            >\n                <i class=\"el-icon-a-011\" v-if=\"index == 0\"></i>\n                <span\n                    v-if=\"\n                        item.redirect === 'noRedirect' ||\n                        index === levelList.length - 1\n                    \"\n                    class=\"no-redirect\"\n                    > {{ item.meta.title }}</span\n                >\n                <a v-else @click.prevent=\"handleLink(item)\"> {{\n                    item.meta.title\n                }}</a>\n            </el-breadcrumb-item>\n        </transition-group>\n    </el-breadcrumb>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            levelList: null,\n        };\n    },\n    watch: {\n        $route(route) {\n            if (route.path.startsWith(\"/redirect/\")) {\n                return;\n            }\n            this.getBreadcrumb();\n        },\n    },\n    created() {\n        this.getBreadcrumb();\n    },\n    methods: {\n        getBreadcrumb() {\n            // only show routes with meta.title\n            let matched = this.$route.matched.filter(\n                (item) => item.meta && item.meta.title\n            );\n            const first = matched[0];\n\n            if (!this.isDashboard(first)) {\n                matched = [{ path: \"/index\", meta: { title: \"首 页\" } }].concat(\n                    matched\n                );\n            }\n\n            this.levelList = matched.filter(\n                (item) =>\n                    item.meta &&\n                    item.meta.title &&\n                    item.meta.breadcrumb !== false\n            );\n        },\n        isDashboard(route) {\n            const name = route && route.name;\n            if (!name) {\n                return false;\n            }\n            return (\n                name.trim().toLocaleLowerCase() === \"index\".toLocaleLowerCase()\n            );\n        },\n        pathCompile(path) {\n            const { params } = this.$route;\n            var pathToRegexp = require(\"path-to-regexp\");\n            var toPath = pathToRegexp.compile(path);\n            return toPath(params);\n        },\n        handleLink(item) {\n            const { redirect, path } = item;\n            if (redirect) {\n                this.$router.push(redirect);\n                return;\n            }\n            this.$router.push(this.pathCompile(path));\n        },\n    },\n};\n</script>\n\n<style scoped>\n.app-breadcrumb {\n    display: inline-block;\n    font-size: 14px;\n    line-height: 40px;\n    margin-left: 8px;\n}\n\n.no-redirect {\n    color: #97a8be;\n    cursor: text;\n}\n\n.el-breadcrumb__item {\n    height: 40px;\n}\n\n.breadcrumb-enter-active,\n.breadcrumb-leave-active {\n    transition: all 0.5s;\n}\n\n.breadcrumb-enter,\n.breadcrumb-leave-active {\n    opacity: 0;\n    transform: translateX(20px);\n}\n\n.breadcrumb-move {\n    transition: all 0.5s;\n}\n\n.breadcrumb-leave-active {\n    position: absolute;\n}\n</style>\n"]}]}