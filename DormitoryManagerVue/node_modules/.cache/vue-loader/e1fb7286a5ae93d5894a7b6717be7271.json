{"remainingRequest":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\views\\personal\\info\\index.vue?vue&type=style&index=0&id=cf672594&scoped=true&lang=css&","dependencies":[{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\src\\views\\personal\\info\\index.vue","mtime":1698660386000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678020088000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1678020086000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678020084000},{"path":"G:\\学生宿舍信息综合管理与服务平台\\DormitoryManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1678020088000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51c2VyLWZvcm0gewogIHdpZHRoOiA0MDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQoKLmF2YXRhciwgLmF2YXRhci11cGxvYWRlciB7CiAgd2lkdGg6IDgwcHg7CiAgaGVpZ2h0OiA4MHB4OwogIG1hcmdpbjogMCBhdXRvOwp9CgouYXZhdGFyLXVwbG9hZGVyIGkgewogIGxpbmUtaGVpZ2h0OiA4MHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IDAgMzJweDsKfQoKLmF2YXRhci11cGxvYWRlciB7CiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7Cn0KCi5hdmF0YXItdXBsb2FkZXI6aG92ZXIgewogIGJvcmRlci1jb2xvcjogIzQwOUVGRjsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA+JA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/personal/info","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"inner_container\">\n        <div class=\"user-form\">\n          <div class=\"avatar\" title=\"点击更换头像\">\n            <el-upload\n                class=\"avatar-uploader\"\n                :action=\"action\"\n                :show-file-list=\"false\"\n                :headers=\"header\"\n                :on-success=\"handleAvatarSuccess\"\n                :before-upload=\"beforeAvatarUpload\">\n              <img v-if=\"user.icon\" :src=\"user.icon\" class=\"avatar\" alt=\"\">\n              <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </el-upload>\n          </div>\n          <br>\n          <el-form ref=\"form\" :rules=\"rules\" :model=\"user\" label-width=\"100px\">\n            <el-form-item label=\"用户名称:\" prop=\"realName\">\n              <el-input v-model=\"user.realName\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"电话:\" prop=\"cellphone\">\n              <el-input v-model=\"user.cellphone\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"邮箱:\" prop=\"email\">\n              <el-input v-model=\"user.email\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"success\" style=\"font-size: 16px;\"  @click=\"update('form')\"> 修改</el-button>\n              <el-button type=\"warning\" style=\"font-size: 16px;\"  @click=\"reset\"> 重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {getUserInfo, update, changeIcon} from \"@/api/user\";\nimport {getToken} from \"@/utils/auth\";\nimport store from \"@/store\";\n\nexport default {\n  name: \"index\",\n  data() {\n    let validator1 = (rule, value, callback) => {\n      if (value.length === 0) {\n        callback()\n        return\n      }\n      let reg = /^1[3456789]\\d{9}$/\n      if (!reg.test(value)) {\n        callback(new Error())\n      } else {\n        callback()\n      }\n    }\n    let validator2 = (rule, value, callback) => {\n      if (value.length === 0) {\n        callback()\n        return\n      }\n      let reg = /^[0-9a-zA-Z_.-]+[@][0-9a-zA-Z_.-]+([.][a-zA-Z]+){1,2}$/;\n      if (!reg.test(value)) {\n        callback(new Error())\n      } else {\n        callback()\n      }\n    }\n    return {\n      header: {\n        \"_ut\": getToken()\n      },\n      action: process.env.VUE_APP_BASE_API + \"/permission/upload\",\n      user: {\n        id: undefined,\n        realName: '',\n        icon: undefined,\n        cellphone: '',\n        email: ''\n      },\n      rules: {\n        realName: [\n          {required: true, message: '名称不能为空', trigger: 'change'},\n          {min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'change'}\n        ],\n        cellphone: [\n          {validator: validator1, message: \"请输入正确的手机号\", trigger: 'change'}\n        ],\n        email: [\n          {validator: validator2, message: \"请输入正确的邮箱\", trigger: 'change'}\n        ]\n      }\n    }\n  },\n  methods: {\n    async handleAvatarSuccess(res) {\n      await this.changeIcon(res.data)\n    },\n    beforeAvatarUpload(file) {\n      const isJPG = file.type.indexOf('image/') !== -1;\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('只能上传图片');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isJPG && isLt2M;\n    },\n    async changeIcon(icon) {\n      changeIcon(icon).then(res => {\n        if (res.statusCode === 200) {\n          this.$message({\n            message: res.msg,\n            type: 'success'\n          });\n          this.reset()\n        }\n      })\n    },\n    update(form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          update(this.user).then(res => {\n            store.commit('SET_USER_NAME', res.data.realName)\n            this.$message({\n              message: res.msg,\n              type: 'success'\n            });\n          })\n        } else {\n          this.$message({\n            message: '请正确填写参数',\n            type: 'error'\n          });\n          return false;\n        }\n      });\n    },\n    async reset() {\n      const {data} = await getUserInfo()\n      if (data.icon) {\n        data.icon = process.env.VUE_APP_IMG_PREFIX + data.icon\n      }\n      this.user = data\n      store.commit('SET_USER_ICON', this.user.icon)\n    }\n  },\n  created() {\n    this.reset()\n  }\n}\n</script>\n\n<style scoped>\n.user-form {\n  width: 400px;\n  margin: 0 auto;\n}\n\n.avatar, .avatar-uploader {\n  width: 80px;\n  height: 80px;\n  margin: 0 auto;\n}\n\n.avatar-uploader i {\n  line-height: 80px;\n  text-align: center;\n  margin: 0 32px;\n}\n\n.avatar-uploader {\n  border: 1px dashed #d9d9d9;\n}\n\n.avatar-uploader:hover {\n  border-color: #409EFF;\n}\n</style>\n"]}]}